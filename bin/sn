#!/usr//bin/env python3
# nmap parser
# 0.1-a1
# nmap parser with features


# Libraries
try:
	import subprocess, sys, socket, requests, time, os
except ImportError:
	print("Cannot import libraries!")


# Class
class scanner:
	args = []
	hosts = []
	ip = "192.168.1.1-10"
	subnet="32"


# Header
def header():
	# Outputs
	os.system("clear")
	print("\x1b[1;33m\t\t\t  0eroScanner\n")
	#print("\x1b[1;35m{0:>12} {1:^28} {2:^25}".format("IP","MAC","HOSTNAME (VENDOR)"))


# Scan function
def scan():	
		session = []				# Clear hosts current session

		# Nmap process
		p = str(str(subprocess.Popen(
	                                	[r"sudo","nmap","-sn",scanner.ip+"/"+scanner.subnet],
	                                	stdout=subprocess.PIPE).communicate()
	                                	).split('\\n')).split('Nmap')[2:-2]
		##########
		# Parse data
		for c,x in enumerate(p):
			ip = str(str(x.split(",")[0]).split(" ")[-1]).translate({ord(i): None for i in '()'})[:-1]
			mac = str(x.split(",")[2]).split(" ")[3]
			#nvendor = x.split("(")[-1][:-5]

			if len(str(x.split(",")[0]).split(" ")) < 6: 
				name = "Unknown"
			else:
				name = str(x.split(",")[0]).split(" ")[4]

			session = [mac,ip,name]

			print("\x1b[1;33m{0:>15} \x1b[1;31m|\x1b[1;32m {1} \x1b[1;31m|\x1b[1;35m {2}".format(ip,mac,name))

			# Sleep time for macvendors request
			time.sleep(0.5)
		# End of parser
		##########
		time.sleep(5)

# Main function
def main():
	try:
		while KeyboardInterrupt:
			header()
			scan()
	# If CTRL-C print exit message
	except KeyboardInterrupt:
		print('Exit')

# run
main()