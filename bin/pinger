#! /usr/bin/env python3
# blastping (WIP)
# 0.1
# ping a subnet


# TODO
# - implement ip input for user
#       - check if the ip is valid (currently deprecate)
#
# - function to scan all subnets
#
# DONE
# - check if is running as ROOT


# Modules
import os
import time
import sys
import subprocess
import concurrent.futures
from pythonping import ping


# Ip variable in case I need it for debugging
#ip = '216.58.205.'


# Function that pings and check if the host is alive
def pingerFingering(base):
    a = ping(ip+'.'+str(base), verbose=False, count=1, timeout=1)
    if str(a).split(' ')[0] == 'Reply':
        print(f'[*] {ip}.{base} is up')


# Main function 
def main():
    # Start counter for timing
    start = time.perf_counter()
    
    print(f'Starting scan for {ip}.0/24\n')

    # Spawn threads for each ip
    with concurrent.futures.ThreadPoolExecutor(max_workers=500) as executor:
        results = executor.map(pingerFingering, range(1,255))

    # Stop timer
    finish = time.perf_counter()

    print(f'\nFinishing in {round(finish-start, 2)} seconds(s)')


if __name__ == '__main__':
    if os.geteuid() != 0:
        exit('Need root permissions.')
    else:
        if len(sys.argv) == 2:

            ip = sys.argv[1].split(".")

            if len(ip) == 4 and len(ip[0]) < 4 and len(ip[1]) < 4 and len(ip[2]) < 4 and len(ip[3]) < 4:
                ip.pop()
                ip = ".".join(ip)
                main()
            else:
                exit('Give me a valid IP.')
        else:
            exit('Usage: sudo pinger <IP>')

