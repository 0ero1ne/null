#!/usr/local/bin/bash
# shows this help
# see on github 
# software manager for scripts

# TODO
# - fix todo output
# EOT

current_version=0.2-a5

# Visual output
printf "\n${Red}%14s\n" "^"
# Version
printf "${Yellow}%12s${NC} [${Blue}%s${NC}]\n\n" ".null" "$current_version"
#printf "\t${NC}[${Blue}%s${NC}]\n\n" 

case $1 in
	"-l")
		# List of all installed scripts
		# Iterate all the file in the bin folder
		for f in $(dirname "$0")/bin/*; do
			# Check if the first char of the script is a #
			if [[ "$(head -n 1 $f | cut -c1-1)" == "#" ]]; then 
				
				# Set App name as variable
				app=$(basename $f)
		
				# Check if the second line has a #, means has a description
				if [[ "$(sed -n 2p $f | cut -c1-1)" == "#" ]]; then
					# Set app's info
					info=$(sed -n 2p $f)
		
					# Output
					printf "${Green}%12s ${Yellow}%s\n" "$app" "$info"
    			else
    				# If no info print standard message
    				printf "${Green}%12s ${Red}%s\n" "$app" "(No info)"
    			fi
    		fi
		done
		printf "\n"
	;;

	"-s")
		#'h | grep -i $1'
		if [ "$2" ]; then
			# Search all the entries
			output=$(null -l | grep -i "$2")
			if [ -n "$output" ]; then
				printf "${NC}Results:\n"
				printf "$output\n\n"
			else
				printf "${Red}\tNo results found!\n\n"
			fi
			
		else
			# Error message for empty argument
			printf "${Red}%28s\n\n" "Give me a key to search!"
		fi
	;;

	"-i")
		if [ "$2" ]; then
			# Iterate apps
			# DEPRECATE; WILL USE FIND INSTEAD?
			for f in $(dirname "$0")/bin/*; do
				# If the argument match the name of the app
				# Pars information
	    		if [[ "$(basename $f)" == "$2" ]]; then	    	
	    			# HEAD
	    			printf "${NC}Name: ${Green}$(basename $f)$NC\n"
	    			# Version
	    			printf "${NC}Version:${Green}$(cat $f | sed -n '3p' | cut -d '#' -f 2)\n"
	    			# Description
	    			printf "${NC}Description:${Green}$(cat $f | sed -n '4p' | cut -d '#' -f 2)\n"
	    			# if TODO exist print the list
	    			if [[ $(cat $f | sed -n '/# TODO/,/# EOT/p' | sed '1d;$d' | tail -c +2) ]];then
	    				printf "${NC}TODO:${Green}\n$(cat $f | sed -n '/# TODO/,/# EOT/p' | sed '1d;$d' | tail -c +2)\n"
	    			fi
	    			# App found, exit 0
	    			echo	
	    			exit 0
    			fi
			done
			# Loop end, return error message
			printf "${Red}\tApp not found!\n\n"
		else
			# Error message for empty argument
			printf "${Red}%25s\n\n" "Give me an app name!"
		fi
	;;

	"-u")
		printf "${NC}Checking for updates..."
		last_version=$(curl -s https://raw.githubusercontent.com/0ero1ne/null/master/null | grep current_version= | head -n 1 | cut -f 2 -d '=')
		if [ $current_version == $last_version ]; then
			printf "\n${Green}Up-to-date.\n\n"
		else
			printf "\n\nA new version has been found!\n"
			printf "\n${Red}Current version: ${NC}$current_version"
			printf "\n${Green}  Newer version: ${NC}$last_version\n\n"
		fi
	;;

	*)
		printf "${NC}"
		printf """\t-l to list 
\t-s to search 
\t-i to info
\t-u to update
\n"""
	;;
esac

# EOF